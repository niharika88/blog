exit
c
s
c
v
c
 blogs << blog
@bloggers
blog
c
params
c
params
c
@blogger.paragraphs 
c
x
Paragraph.create(data: p)
Paragraph
Paragraph.create(body: p)
Paragraph.create(p)
@blogger.paragraphsParagraph.create(p)
@blogger.paragraphs
c
paragraphs.each do |x| p x end
paragraphs
c
 c
c
@blogger
@blogger.save
@blogger
c
m
n
c
Blogger.new(blogger_params.except(:paragraphs))
 blogger_params.except(:paragraphs)
 blogger_params.except(:parafraphs)
paragraphs = blogger_params["paragraphs"].split(/\n+/)
 blogger_params["paragraphs"]
c
paragraphs = blogger_params["paragraphs"].split(/\\n+/)
paragraphs = blogger_params["paragraphs"]
paragraphs = blogger_params["paragraphs"].split(/\n+/)
paragraphs = blogger_params["paragraphs"].split(/\n\n+/)
blogger_params
blogger_params.slice!["title"]
blogger_params.slice!["title","author"]
blogger_params.slice!["title", "author"]
m = blogger_params.slice!["title", "author"]
m = {}
m = blogger_params.slice["title", "author"]
blogger_params.slice["title"]
blogger_params["title"]
blogger_params[:tittle]
blogger_params["tittle"]
Blogger.new(blogger_params["tittle"])
blogger_params
blogger_params.slice["title"]
blogger_params.slice['title']
blogger_params.slice[:title]
blogger_params.slice[:title, :author]
Blogger.new(blogger_params.slice[:title, :author])
Blogger.new(blogger_params)
blogger_params
c
params
blogger_params
skip_before_filter :verify_authenticity_token
exit
params
params.keys
c
params.keys
exit
params.keys
params
